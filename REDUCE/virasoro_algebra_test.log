Loading image file: D:\Reduce\lib\psl\red\reduce.img 
Reduce (Free PSL version, revision 6657), 18-Dec-2023 ...

1: in "D:\OneDrive\work\ConformalFieldTheory\REDUCE\virasoro_algebra.red"$

*** vecf declared operator 

centralcharge

conformalweight

cw

partitions

partnum

monomial

monomials

dualmonomial

dualmonomials

lincomb

ltoz

allcoeffs

solsingvec

singvec

kacmat

kacdet

kacdet_t

kacdet_fact

proj12

proj12_fact

act_ff

g_ff

f_ff

f_ff_fact

f_ff_sol

2: in "D:\OneDrive\work\ConformalFieldTheory\REDUCE\virasoro_algebra_test.red";
centralcharge(tau);


   -1       2
tau  *(6*tau  + 13*tau + 6)

conformalweight(r, s, tau);


   -1      1     2  2    1     2    1             1         1   2    1
tau  *( - ---*tau *s  + ---*tau  - ---*tau*r*s + ---*tau - ---*r  + ---)
           4             4          2             2         4        4


partitions(5);


{{1,1,1,1,1},{1,1,1,2},{1,1,3},{1,2,2},{1,4},{2,3},{5}}

partnum(5);


7


monomial({1,1,2,3,3,3,4});


           3            2
l(-4)*l(-3) *l(-2)*l(-1)

monomials(5);


      5
{l(-1) ,

            3
 l(-2)*l(-1) ,

            2
 l(-3)*l(-1) ,

      2
 l(-2) *l(-1),

 l(-4)*l(-1),

 l(-3)*l(-2),

 l(-5)}

dualmonomial({1,1,2,3,3,3,4});


    2          3
l(1) *l(2)*l(3) *l(4)

dualmonomials(5);


     5
{l(1) ,

     3
 l(1) *l(2),

     2
 l(1) *l(3),

          2
 l(1)*l(2) ,

 l(1)*l(4),

 l(2)*l(3),

 l(5)}


lincomb(5);


     5           2                       3                 2
l(-1)  + x3*l(-2) *l(-1) + x1*l(-2)*l(-1)  + x2*l(-3)*l(-1)  + x5*l(-3)*l(-2)

 + x4*l(-4)*l(-1) + x6*l(-5)

ltoz(lincomb(5), 5);


     3           2              2                                   5
x1*z1 *z2 + x2*z1 *z3 + x3*z1*z2  + x4*z1*z4 + x5*z2*z3 + x6*z5 + z1

allcoeffs(lincomb(5), 5);


{x6,

 x5,

 x4,

 x3,

 x2,

 x1,

 1}

solsingvec(2, 2, tau);


           2
      2*tau  + 2
{{x1=------------,
         tau

           2
      2*tau  + 6*tau + 2
  x2=--------------------,
             tau

         4        2
      tau  - 2*tau  + 1
  x3=-------------------,
               2
            tau

           2
      3*tau  + 6*tau + 3
  x4=--------------------}}
             tau

singvec(2, 2, tau);


     4      -2      2     4        2             -1            2     2
l(-1)  + tau  *l(-2) *(tau  - 2*tau  + 1) + 2*tau  *l(-2)*l(-1) *(tau  + 1)

        -1                 2                     -1           2
 + 2*tau  *l(-3)*l(-1)*(tau  + 3*tau + 1) + 3*tau  *l(-4)*(tau  + 2*tau + 1)


kacmat(3);


[         2                                         ]
[24*h*(2*h  + 3*h + 1)  12*h*(3*h + 1)      24*h    ]
[                                                   ]
[   12*h*(3*h + 1)      h*(8*h + c + 8)     10*h    ]
[                                                   ]
[        24*h                10*h        2*(3*h + c)]


kacdet(3);


    2      4       3          3      2  2      2          2        2
48*h *(48*h  + 22*h *c - 142*h  + 2*h *c  - 5*h *c + 102*h  + 3*h*c  - 13*h*c

                  2
        - 20*h + c  + 2*c)

kacdet_t(3, tau);


       -2  2      4    2       3    3       3    2       3           2    4
144*tau  *h *(16*h *tau  + 44*h *tau  + 48*h *tau  + 44*h *tau + 24*h *tau

                     2    3        2    2       2           2           4
               + 94*h *tau  + 173*h *tau  + 94*h *tau + 24*h  + 36*h*tau

                          3            2                            4         3
               + 130*h*tau  + 178*h*tau  + 130*h*tau + 36*h + 12*tau  + 56*tau

                       2
               + 89*tau  + 56*tau + 12)

kacdet_fact(3, tau);


{num={{144,1},

      {4*h*tau + 2*tau + 3,1},

      {h*tau + tau + 2,1},

      {4*h + 3*tau + 2,1},

      {h + 2*tau + 1,1},

      {h,2}},

        2
 den=tau }


proj12(singvec(2, 2, tau));


   -2     4   2        3   2         2   4        2   2           2        2
tau  *(tau *z2  + 2*tau *z1 *z2 + tau *z1  - 2*tau *z2  + 2*tau*z1 *z2 + z2 )

proj12_fact(singvec(2, 2, tau));


          2            2
{num={{tau *z2 + tau*z1  + 2*tau*z2 + z2,1},

          2            2
      {tau *z2 + tau*z1  - 2*tau*z2 + z2,1}},

        2
 den=tau }


act_ff(l(-3), h0, h0+h1-h2);


3*h0 + h1 - h2

factorize(act_ff(l(-2)*l(-1), h0, h0+h1-h2));


{{2*h0 + h1 - h2 + 1,1},{h0 + h1 - h2,1}}

factorize(act_ff(l(-1)^3, h0, h0+h1-h2));


{{h0 + h1 - h2 + 2,1},

 {h0 + h1 - h2 + 1,1},

 {h0 + h1 - h2,1}}


g_ff(2, 2, cw(1, 1, tau), cw(1, 1, tau) + cw(2, 2, tau) + h2, tau);


   -4    9      8    3      7       3      7    1     6   2    1     6
tau  *(-----*tau  + ----*tau *h2 + ----*tau  - ---*tau *h2  + ---*tau *h2
        256          16             16          8              2

           15     6      5   3      5   2    3      5       3      5      4   4
        + ----*tau  - tau *h2  - tau *h2  - ----*tau *h2 - ----*tau  + tau *h2
           64                                16             16

           3     4   2      4       69      4      3   3      3   2
        - ---*tau *h2  - tau *h2 - -----*tau  - tau *h2  - tau *h2
           4                        128

           3      3       3      3    1     2   2    1     2       15     2
        - ----*tau *h2 - ----*tau  - ---*tau *h2  + ---*tau *h2 + ----*tau
           16             16          8              2             64

           3             3           9
        + ----*tau*h2 + ----*tau + -----)
           16            16         256

f_ff(1, 1, 2, 2, h2, tau);


   -4    9      8    3      7       3      7    1     6   2    1     6
tau  *(-----*tau  - ----*tau *h2 + ----*tau  - ---*tau *h2  - ---*tau *h2
        256          16             16          8              2

           15     6      5   3      5   2    3      5       3      5      4   4
        + ----*tau  + tau *h2  - tau *h2  + ----*tau *h2 - ----*tau  + tau *h2
           64                                16             16

           3     4   2      4       69      4      3   3      3   2
        - ---*tau *h2  + tau *h2 - -----*tau  + tau *h2  - tau *h2
           4                        128

           3      3       3      3    1     2   2    1     2       15     2
        + ----*tau *h2 - ----*tau  - ---*tau *h2  - ---*tau *h2 + ----*tau
           16             16          8              2             64

           3             3           9
        - ----*tau*h2 + ----*tau + -----)
           16            16         256

f_ff_fact(1, 1, 2, 2, h2, tau);


                       2
{num={{4*h2*tau + 3*tau  + 6*tau + 3,1},

                       2
      {4*h2*tau + 3*tau  - 2*tau - 1,1},

                     2
      {4*h2*tau - tau  - 2*tau + 3,1},

                     2
      {4*h2*tau - tau  - 2*tau - 1,1}},

            4
 den=256*tau }

f_ff_sol(1, 1, 2, 2, h2, tau);


        2
     tau  + 2*tau + 1
{h2=------------------,
          4*tau

        2
     tau  + 2*tau - 3
 h2=------------------,
          4*tau

             2
      - 3*tau  + 2*tau + 1
 h2=-----------------------,
             4*tau

             2
      - 3*tau  - 6*tau - 3
 h2=-----------------------}
             4*tau


;

end;

3: 